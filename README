
AdWords API DotNet Client Library

Google's AdWords API service lets developers design computer programs that
interact directly with the AdWords platform. With these applications,
advertisers and third-parties can more efficiently - and creatively - manage
their large or complex AdWords accounts and campaigns.

AdWords API DotNet Client Library makes it easier to write .NET clients to
programmatically access AdWords accounts. The client library is provided as a
Visual Studio project that contains the generated stubs, with v13 classes in
com.google.api.adwords.v13 namespace and v200902 classes in
com.google.api.adwords.v200902.ServiceName namespace. There is no need to worry
about accessing the WSDL for the web services, this is done through the classes
in the client library. All duplicate classes generated from WSDL have been
removed. This is done automatically with wsdl.exe from .NET SDK 2.0. The client
library is compatible with .NET SDK 2.0 and above. Two useful SOAPExtension
classes are provided. The ApiUnitsExtension takes care of API units accounting
for all services. The TraceExtension logs all SOAP requests and responses to
log files or to console. You can configure logging using various keys in the
App.config file. You can turn console logging on or off using "LogToConsole"
key, and file logging using "LogToFile" key. The place where log files are
stored can be configured in the App.config file, using "LogPath" key.

Demo programs in the Examples directory demonstrate how to use client
library. To run an example, open the solution file google-api-adwords-dotnet.sln
in Visual Studio, build the solution, and execute it on command line at
Examples/bin/Debug.
    > Examples.exe v13.AccountServiceDemo
    > Examples.exe v200902.AddCampaign

You can get the list of all the commandline options by running Examples.exe
without any command line options.

In the .NET 2.0 SOAP layer primitive types do not get serialized by default.
.NET has no way of specifying null for a variable of a primitive type. If a
primitive type variable is a binding to a SOAP paramer defined in the WSDL as
nillable="true", in order for the variable to be serialized you need to set a
variable <parameterName>Specified to true in order for it to be serialized.
    newCampaign.budgetAmount = 1000000L;
    newCampaign.budgetAmountSpecified = true;
The members <parameterName>Specified are an artifact of the .NET SOAP library
and are not present in the original WSDL.

How do I start?
If you don't have one already, sign up for a Google Account at
https://www.google.com/accounts/NewAccount. Update App.config with
authentication credentials for your Google Account, to make requests against
sandbox or with authentication credentials for your AdWords account, to make
requests against production environment.

How to make a release?
1. If a new version is being added, create the stub classes for the new version
as follows:
  > wsdl.exe /namespace:com.google.api.adwords.vXX wsdl-url

2. Create src/vXX directory and copy generated files into it. Build the project
and remove all duplicate classes manually, until build is successful.

3. Update examples to appropriate API version.

4. Change the versions in AssemblyInfo.cs and Examples\AssemblyInfo.cs to
v.v.v, where v.v.v is a version number (e.g., 2.1.0).

5. Create a directory with a name awapi_dotnet_lib_v.v.v, where v.v.v is a
version number (e.g., 2.1.0), and copy new release into it. Pack new release
into a tarball and then gzip it,
    > tar -cvf awapi_dotnet_lib_v.v.v.tar awapi_dotnet_lib_v.v.v/
    > gzip awapi_dotnet_lib_v.v.v.tar

Where do I submit bug reports and feature requests?
Bug reports and feature requests can be submitted at
http://code.google.com/p/google-api-adwords-dotnet/issues/list.

Requires:
    - .NET Framework 2.0 (or above)
                        -- http://msdn2.microsoft.com/en-us/netframework/default.aspx
    - Visual Studio     -- http://msdn2.microsoft.com/en-us/vstudio/default.aspx
    - Google Account    -- https://www.google.com/accounts/NewAccount

Includes:
    - Examples          -- demo programs for the client library
    - src/lib           -- core library
    - src/vXX           -- classes for each API web service
    - src/lib/util      -- utility classes

Author:
    chanezon@gmail.com (Patrick Chanezon)

Maintainers:
    api.jeffy@gmail.com (Jeffrey Posnick)
    api.arogal@gmail.com (Adam Rogal)
    api.anash@gmail.com (Anash P. Oommen)
